% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R
\name{convert}
\alias{convert}
\title{Compose Moodle page from (R)Markdown file}
\usage{
convert(
  file = NULL,
  dir = NULL,
  tag = c("article", "div"),
  id = NULL,
  clip = TRUE,
  full_html = FALSE,
  remove_script = FALSE,
  stylesheet = NULL,
  template = NULL
)
}
\arguments{
\item{file}{character. Path to the (R)markdown file.}

\item{dir}{character. Output directory.}

\item{tag}{character. Surrounding tag for the HTML block, "article" and "div"
are allowed.}

\item{id}{character. ID attribute for the surrounding tag.}

\item{clip}{logical. Whether or not copy the result to clipboard. Ignored
(set to FALSE) if \code{full_html = TRUE}. Default is TRUE.}

\item{full_html}{logical. Produce the complete HTML or HTML block only?}

\item{remove_script}{logical. Whether or not remove script tags. Ignored
(set to FALSE) if \code{full_html = TRUE}. Default is FALSE}

\item{stylesheet}{character. Paths to the CSS files used in markdown::mark()}

\item{template}{character. Path to the template used in markdown::mark()}
}
\value{
Invisibly returns a character vector identical to the result file.
}
\description{
This function facilitates writing Moodle pages with (R) Markdown.
It basically does three things:
\enumerate{
\item it converts (R) Markdown file into a HTML file with
\code{\link[knitr:knit]{knitr::knit()}} + \code{\link[markdown:mark]{markdown::mark()}},
\item inlines style information with \code{\link[juicyjuice:css_inline]{juicyjuice::css_inline()}}, and then
\item extracts article/div element that is ready for copying and pasting into
Moodle's source editor.
}
}
